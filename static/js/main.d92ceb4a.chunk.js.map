{"version":3,"sources":["reportWebVitals.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","date","Date","onChange","e","setState","searchFiled","target","value","field","x","setInterval","now","getTime","state","countTime","Starts","days","hours","minutes","seconds","distance","Math","floor","console","log","document","getElementById","innerHTML","Reset","ResetClick","clearInterval","className","this","type","placeholder","Component","ReactDOM","render"],"mappings":"sJAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iDCmFCQ,E,kDAjFb,aAAc,IAAD,8BACX,gBAFFC,KAAM,IAAIC,KACG,EAcbC,SAAS,SAACC,GAER,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,MAAMC,MAAM,MAhBtC,EAqBZC,EAAGC,aAAY,WACZ,IAAIC,GAAM,IAAIV,MAAOW,UACrB,GAA4B,KAAzB,EAAKC,MAAMR,YAAiB,CAC7B,IAAIS,EAAU,IAAIb,KAAK,EAAKY,MAAMR,aAAaO,UAC/C,GAAGD,EAAIG,EAEL,YADA,EAAKV,SAAS,CAACW,OAAO,gDAAgDC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,IAGzG,IAAIC,EAASN,EAAUH,EACnBK,EAAOK,KAAKC,MAAMF,EAAQ,OAC1BH,EAAQI,KAAKC,MAAOF,EAAQ,MAAT,MACvBG,QAAQC,IAAIP,GACZ,IAAIC,EAAUG,KAAKC,MAAOF,EAAQ,KAAT,KACrBD,EAAUE,KAAKC,MAAOF,EAAQ,IAAkB,KAEpD,EAAKhB,SAAS,CAACY,KAAKA,EAAKC,MAAMA,EAAMC,QAAQA,EAAQC,QAAQA,IAC7DI,QAAQC,IAAR,4CAAiDR,EAAjD,gBAA6DC,EAA7D,iBAA2EC,EAA3E,mBAA6FC,EAA7F,YACIC,EAAW,IAEbK,SAASC,eAAe,QAAQC,UAAY,cAKhD,KA7CS,EA+CbC,MAAM,WACJ,EAAKxB,SAAS,CACZC,YAAY,GACZW,KAAM,EACNC,MAAO,EACPC,QAAS,EACTC,QAAS,EACTU,YAAY,IAEX,EAAKhB,MAAMgB,YACZC,cAAc,EAAKrB,IAvDrB,EAAKI,MAAM,CACTR,YAAY,GACZW,KAAM,EACNC,MAAO,EACPC,QAAS,EACTC,QAAS,EACTU,YAAY,EACZd,OAAO,IATE,E,0CA6Db,WACE,OACE,sBAAKgB,UAAU,aAAf,UACA,6DAA8BC,KAAKhC,QACnC,mFACA,uBAAO+B,UAAU,qBAAqBE,KAAK,iBAAiBC,YAAY,mCAAmChC,SAAU8B,KAAK9B,WAC9F,KAAzB8B,KAAKnB,MAAMR,YAAkB,yFAAmE,gCACjG,6BAAK2B,KAAKnB,MAAME,SAChB,gEAAiCiB,KAAKnB,MAAMG,KAA5C,gBAAwDgB,KAAKnB,MAAMI,MAAnE,iBAAiFe,KAAKnB,MAAMK,QAA5F,mBAA8Gc,KAAKnB,MAAMM,QAAzH,gBAEA,4C,GA1EUgB,aCGlBC,IAASC,OACP,8BACI,cAAC,EAAD,MAIJZ,SAASC,eAAe,SAM1BpC,M","file":"static/js/main.d92ceb4a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React,{Component} from 'react';\r\nimport tachyons from \"tachyons\";\r\nimport \"./index.css\"\r\nimport {Navbar, Nav, NavItem} from 'react-bootstrap';\r\n\r\n\r\nclass App extends Component{\r\n  x;\r\n  date= new Date()\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      searchFiled:\"\",\r\n      days: 0,\r\n      hours: 0,\r\n      minutes: 0, \r\n      seconds: 0,\r\n      ResetClick: false,\r\n      Starts:\"\"\r\n    }\r\n  }\r\n  \r\n\r\n  onChange=(e)=>{\r\n    //console.log(e.target.value)\r\n    this.setState({searchFiled: e.target.value,field:\"\"})\r\n  }\r\n\r\n \r\n    \r\n   x= setInterval(()=>{\r\n      var now = new Date().getTime();\r\n      if(this.state.searchFiled!==\"\"){\r\n        var countTime=new Date(this.state.searchFiled).getTime()\r\n        if(now>countTime){\r\n          this.setState({Starts:\"Timer not starts because of the past date !!!\",days:0,hours:0,minutes:0,seconds:0})\r\n          return ;\r\n        }\r\n        var distance=countTime-now;\r\n        var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        console.log(hours)\r\n        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n        //document.getElementById(\"timer\").innerHTML=`${hours}Hours ${minutes}Minutes ${seconds}Seconds`\r\n        this.setState({days:days,hours:hours,minutes:minutes,seconds:seconds})\r\n        console.log(`Timer Ends in this time period :- ${days}Days ${hours}Hours ${minutes}Minutes ${seconds}Seconds`)\r\n        if (distance < 0) {\r\n         // clearInterval(x);\r\n          document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\r\n        }\r\n        }\r\n\r\n      }\r\n     ,1000)\r\n\r\n  Reset=()=>{\r\n    this.setState({\r\n      searchFiled:\"\",\r\n      days: 0,\r\n      hours: 0,\r\n      minutes: 0, \r\n      seconds: 0,\r\n      ResetClick: true\r\n    })\r\n    if(this.state.ResetClick){\r\n      clearInterval(this.x);\r\n    }\r\n    \r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"tc modify \">\r\n      <h1>{`Current Time in INDIA ${this.date}`}</h1>\r\n      <h4>Please Enter the date on which the Timer Ends !!!</h4>\r\n      <input className=\"pa2 bg-light-green\" type=\"datetime-local\" placeholder=\"Enter date in MM-DD-YEAR Formate\" onChange={this.onChange}/>\r\n        {this.state.searchFiled===\"\"? <h2>Remaining Time Period :- 0Days 0Hours 0Minutes 0Seconds</h2> : <div>\r\n        <h1>{this.state.Starts}</h1>\r\n        <h2>{`Remaining Time Period :- ${this.state.days}Days ${this.state.hours}Hours ${this.state.minutes}Minutes ${this.state.seconds}Seconds`}</h2>\r\n          </div>}\r\n        <span> </span>\r\n      </div>\r\n    )\r\n    \r\n  }\r\n\r\n  }\r\n\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from \"./App\"\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <div>\r\n      <App/>\r\n  </div>\r\n  \r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}